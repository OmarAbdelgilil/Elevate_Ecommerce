// Mocks generated by Mockito 5.4.4 from annotations
// in elevate_ecommerce/test/features/home/presentation/check_out/checkout_viewmodel_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:elevate_ecommerce/core/common/api_result.dart' as _i5;
import 'package:elevate_ecommerce/features/payment/data/models/create_order/create_order/create_order.dart'
    as _i10;
import 'package:elevate_ecommerce/features/payment/data/models/payment/payment.dart'
    as _i6;
import 'package:elevate_ecommerce/features/payment/data/models/request/payment/payment.request.dart'
    as _i7;
import 'package:elevate_ecommerce/features/payment/domain/repos/payment_repo.dart'
    as _i2;
import 'package:elevate_ecommerce/features/payment/domain/usecases/create_cache_order_usecase.dart'
    as _i9;
import 'package:elevate_ecommerce/features/payment/domain/usecases/payment_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaymentRepo_0 extends _i1.SmartFake implements _i2.PaymentRepo {
  _FakePaymentRepo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaymentUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentUsecase extends _i1.Mock implements _i3.PaymentUsecase {
  MockPaymentUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PaymentRepo get paymentRepo => (super.noSuchMethod(
        Invocation.getter(#paymentRepo),
        returnValue: _FakePaymentRepo_0(
          this,
          Invocation.getter(#paymentRepo),
        ),
      ) as _i2.PaymentRepo);

  @override
  _i4.Future<_i5.Result<_i6.Payment?>> getPayment(
          _i7.PaymentRequest? paymentRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPayment,
          [paymentRequest],
        ),
        returnValue: _i4.Future<_i5.Result<_i6.Payment?>>.value(
            _i8.dummyValue<_i5.Result<_i6.Payment?>>(
          this,
          Invocation.method(
            #getPayment,
            [paymentRequest],
          ),
        )),
      ) as _i4.Future<_i5.Result<_i6.Payment?>>);
}

/// A class which mocks [CreateCacheOrderUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateCacheOrderUsecase extends _i1.Mock
    implements _i9.CreateCacheOrderUsecase {
  MockCreateCacheOrderUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PaymentRepo get paymentRepo => (super.noSuchMethod(
        Invocation.getter(#paymentRepo),
        returnValue: _FakePaymentRepo_0(
          this,
          Invocation.getter(#paymentRepo),
        ),
      ) as _i2.PaymentRepo);

  @override
  _i4.Future<_i5.Result<_i10.CreateOrder?>> getPayment(
          _i7.PaymentRequest? paymentRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPayment,
          [paymentRequest],
        ),
        returnValue: _i4.Future<_i5.Result<_i10.CreateOrder?>>.value(
            _i8.dummyValue<_i5.Result<_i10.CreateOrder?>>(
          this,
          Invocation.method(
            #getPayment,
            [paymentRequest],
          ),
        )),
      ) as _i4.Future<_i5.Result<_i10.CreateOrder?>>);
}
